                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _processPlayer
                                     13 	.globl _print
                                     14 	.globl _putchar
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _INITIALIZED
                                     26 ;--------------------------------------------------------
                                     27 ; absolute external ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _DABS (ABS)
                                     30 ;--------------------------------------------------------
                                     31 ; global & static initialisations
                                     32 ;--------------------------------------------------------
                                     33 	.area _HOME
                                     34 	.area _GSINIT
                                     35 	.area _GSFINAL
                                     36 	.area _GSINIT
                                     37 ;--------------------------------------------------------
                                     38 ; Home
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _HOME
                                     42 ;--------------------------------------------------------
                                     43 ; code
                                     44 ;--------------------------------------------------------
                                     45 	.area _CODE
                           000000    46 	G$main$0$0	= .
                                     47 	.globl	G$main$0$0
                           000000    48 	C$main.c$10$0_0$56	= .
                                     49 	.globl	C$main.c$10$0_0$56
                                     50 ;main.c:10: void main(void)
                                     51 ;	---------------------------------
                                     52 ; Function main
                                     53 ; ---------------------------------
      000000                         54 _main::
                           000000    55 	C$main.c$24$1_0$56	= .
                                     56 	.globl	C$main.c$24$1_0$56
                                     57 ;main.c:24: __endasm;
      000000 DB AA            [11]   58 	IN	A,(#0xAA)
      000002 E6 F0            [ 7]   59 	AND	#0xF0
      000004 F6 05            [ 7]   60 	OR	#5
      000006 D3 AA            [11]   61 	OUT	(#0xAA),A
      000008 00               [ 4]   62 	NOP
      000009 DB A9            [11]   63 	IN	A,(#0xA9)
      00000B E6 08            [ 7]   64 	AND	#0b00001000
      00000D C0               [11]   65 	RET	NZ
                           00000E    66 	C$main.c$39$1_0$56	= .
                                     67 	.globl	C$main.c$39$1_0$56
                                     68 ;main.c:39: __endasm;
                                     69 ;
      00000E 31 80 F3         [10]   70 	LD	SP,#0xF380
                                     71 ;
                                     72 ;
      000011 3E 20            [ 7]   73 	LD	A,#32 ;
      000013 32 AE F3         [13]   74 	LD	(#0xF3AE),A
      000016 CD 6C 00         [17]   75 	CALL	#0x006C
      000019 CD C3 00         [17]   76 	CALL	#0x0C3
                           00001C    77 	C$main.c$41$1_0$56	= .
                                     78 	.globl	C$main.c$41$1_0$56
                                     79 ;main.c:41: processPlayer();
                           00001C    80 	C$main.c$42$1_0$56	= .
                                     81 	.globl	C$main.c$42$1_0$56
                                     82 ;main.c:42: }
                           00001C    83 	C$main.c$42$1_0$56	= .
                                     84 	.globl	C$main.c$42$1_0$56
                           00001C    85 	XG$main$0$0	= .
                                     86 	.globl	XG$main$0$0
      00001C C3r00r00         [10]   87 	jp	_processPlayer
                           00001F    88 	G$print$0$0	= .
                                     89 	.globl	G$print$0$0
                           00001F    90 	C$main.c$44$1_0$58	= .
                                     91 	.globl	C$main.c$44$1_0$58
                                     92 ;main.c:44: void print(char * pc) __z88dk_fastcall
                                     93 ;	---------------------------------
                                     94 ; Function print
                                     95 ; ---------------------------------
      00001F                         96 _print::
      00001F EB               [ 4]   97 	ex	de, hl
                           000020    98 	C$main.c$46$1_0$58	= .
                                     99 	.globl	C$main.c$46$1_0$58
                                    100 ;main.c:46: while (* pc != '\0')
      000020                        101 00101$:
      000020 1A               [ 7]  102 	ld	a, (de)
      000021 6F               [ 4]  103 	ld	l, a
      000022 B7               [ 4]  104 	or	a, a
      000023 C8               [11]  105 	ret	Z
                           000024   106 	C$main.c$48$2_0$59	= .
                                    107 	.globl	C$main.c$48$2_0$59
                                    108 ;main.c:48: putchar(*pc);
      000024 D5               [11]  109 	push	de
      000025 CDr2Cr00         [17]  110 	call	_putchar
      000028 D1               [10]  111 	pop	de
                           000029   112 	C$main.c$49$2_0$59	= .
                                    113 	.globl	C$main.c$49$2_0$59
                                    114 ;main.c:49: pc++;
      000029 13               [ 6]  115 	inc	de
                           00002A   116 	C$main.c$51$1_0$58	= .
                                    117 	.globl	C$main.c$51$1_0$58
                                    118 ;main.c:51: }
                           00002A   119 	C$main.c$51$1_0$58	= .
                                    120 	.globl	C$main.c$51$1_0$58
                           00002A   121 	XG$print$0$0	= .
                                    122 	.globl	XG$print$0$0
      00002A 18 F4            [12]  123 	jr	00101$
                           00002C   124 	G$putchar$0$0	= .
                                    125 	.globl	G$putchar$0$0
                           00002C   126 	C$main.c$52$1_0$61	= .
                                    127 	.globl	C$main.c$52$1_0$61
                                    128 ;main.c:52: void putchar(char c) __z88dk_fastcall
                                    129 ;	---------------------------------
                                    130 ; Function putchar
                                    131 ; ---------------------------------
      00002C                        132 _putchar::
                           00002C   133 	C$main.c$57$1_0$61	= .
                                    134 	.globl	C$main.c$57$1_0$61
                                    135 ;main.c:57: __endasm;
      00002C 7D               [ 4]  136 	ld	a,l
      00002D CD A2 00         [17]  137 	call	#0x00A2
                           000030   138 	C$main.c$58$1_0$61	= .
                                    139 	.globl	C$main.c$58$1_0$61
                                    140 ;main.c:58: }
                           000030   141 	C$main.c$58$1_0$61	= .
                                    142 	.globl	C$main.c$58$1_0$61
                           000030   143 	XG$putchar$0$0	= .
                                    144 	.globl	XG$putchar$0$0
      000030 C9               [10]  145 	ret
                                    146 	.area _CODE
                                    147 	.area _INITIALIZER
                                    148 	.area _CABS (ABS)
